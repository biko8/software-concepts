@startuml

namespace "Layers Legend" as legend {
    namespace infraestructure #SkyBlue {}
    namespace domain #LightYellow {}
    namespace application #LightPink {}
}

namespace apps #SkyBlue {
    namespace app1 {
        class Router
        class Consumer
    }
}
namespace contexts {
    namespace boundedContext1 {
        namespace module1 {
            namespace application #LightPink {
                namespace usecase1 {}
                namespace usecase2 {}
            }
            namespace domain #LightYellow {
                class ValueObject
                class Entity
                class AggregateRoot
                class DomainService
                interface AggregateRootRepository
            }
            namespace intraestructure #SkyBlue {
                class AggregateRootMongoRespository
                contexts.boundedContext1.module1.domain.AggregateRootRepository <|.. AggregateRootMongoRespository
            }
        }
        namespace module2 {}
    }

    namespace boundedContext2 {
        namespace module1 {}
        namespace module2 {}
    }
}

apps.app1.Router --> contexts.boundedContext1.module1.application.usecase1
apps.app1.Consumer --> contexts.boundedContext1.module1.application.usecase2
contexts.boundedContext1.module1.application.usecase1 --> contexts.boundedContext1.module1.domain.AggregateRootRepository
contexts.boundedContext1.module1.application.usecase1 --> contexts.boundedContext1.module1.domain.AggregateRoot
contexts.boundedContext1.module1.domain.AggregateRoot --> contexts.boundedContext1.module1.domain.DomainService

@enduml